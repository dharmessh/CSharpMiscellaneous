using System;

namespace Practice
{
    internal class Program
    {
        static void Main()
        {
            // Sample Array of Integers
            int[] numbers = {1, 1, 2, 2, 2, 3, 4, 5, 6, 6};
            int[] numbersArr = {1,2,3,4,5};
         
            int uniqueElementsV2 = RemoveDuplicatesV2(numbers);
            int uniqueNumbersV2 = RemoveDuplicatesV2(numbersArr);

            Console.WriteLine(uniqueElementsV2);
            Console.WriteLine(uniqueNumbersV2);
        }

        // https://leetcode.com/problems/remove-duplicates-from-sorted-array/
        // Remove Duplicates from Sorted Array
        // Leet Code Problem 26
        public static int RemoveDuplicatesV1(int[] numbers)
        {
            HashSet<int> uniqueNumbers = new HashSet<int>(numbers);
            for (int i = 0; i < uniqueNumbers.Count; i++)
            {
                numbers[i] = uniqueNumbers.ElementAt(i);
            }

            for (int i = uniqueNumbers.Count; i < numbers.Length; i++)
            {
                numbers[i] = 0;
            }
            return uniqueNumbers.Count;
        }

        // Optimal Approach
        public static int RemoveDuplicatesV2(int[] numbers)
        {
            int i = 0;

            for (int j = 1; j < numbers.Length; j++)
            {
                if (numbers[i] != numbers[j])
                {
                    i++;
                    numbers[i] = numbers[j];
                }
            }
            return i + 1;
        }
    }
}
