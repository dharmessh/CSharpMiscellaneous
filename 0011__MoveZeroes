using System;

namespace Practice
{
    internal class Program
    {
        static void Main()
        {
            // Sample Array of Integers
            int[] numbers = {1, 1, 2, 2, 2, 3, 4, 5, 6, 6};
            int[] numbersArr = {1, 2, 3, 4, 5};
            int[] numbersZeroes = {1, 0, 3, 0, 0, 6, 7};

            MoveZeroesToEnd(numbersArr);
            foreach (int i in numbersArr)
            {
                Console.WriteLine(i);
            }

            MoveZeroesToEndV2(numbersZeroes);
            for (int i = 0; i < numbersZeroes.Length; i++)
            {
                Console.WriteLine(numbersZeroes[i]);
            }
        }

        // https://leetcode.com/problems/move-zeroes/description/
        // Move Zeroe to the End of the Array
        // LeetCode Problem 283
        public static void MoveZeroesToEnd(int[] inputArr)
        {
            List<int> nonZeroNumbers = new List<int>();

            for (int i = 0; i < inputArr.Length; i++)
            {
                if (inputArr[i] != 0)
                {
                    nonZeroNumbers.Add(inputArr[i]);    
                }
            }

            for (int i = 0; i < nonZeroNumbers.Count; i++)
            {
                inputArr[i] = nonZeroNumbers[i];
            }

            for (int i = nonZeroNumbers.Count; i < inputArr.Length; i++)
            {
                inputArr[i] = 0;
            }
        }

        // Optimal Approach
        public static void MoveZeroesToEndV2(int[] inputArr)
        {
            int j = -1;

            for(int i = 0; i < inputArr.Length; i++)
            {
                if (inputArr[i] == 0)
                {
                    j = i;
                    break;
                }
            }

            if (j == -1) return;

            for (int i = j + 1; i < inputArr.Length; i++)
            {
                if (inputArr[i] != 0)
                {
                    inputArr[j] = inputArr[i];
                    inputArr[i] = 0;
                    j++;
                }
            }
        }
    }
}
